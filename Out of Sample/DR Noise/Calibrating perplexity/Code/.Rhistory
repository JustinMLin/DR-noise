dist_cor = tsne_error[,3],
perplexity = rep(perplexity, each=b))
df_noise_error = data.frame(trust = tsne_noise_error[,1],
stress = tsne_noise_error[,2],
dist_cor = tsne_noise_error[,3],
perplexity = rep(perplexity, each=b))
p1 = ggplot(df_error, aes(x = trust,
y = factor(perplexity),
group = factor(perplexity),
col = factor(perplexity))) +
geom_boxplot(show.legend = FALSE) +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black", fill="black") +
labs(y = "perplexity")
p2 = ggplot(df_error, aes(x = stress,
y = factor(perplexity),
group = factor(perplexity),
col = factor(perplexity))) +
geom_boxplot(show.legend = FALSE) +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black", fill="black") +
labs(y = "perplexity")
p3 = ggplot(df_error, aes(x = dist_cor,
y = factor(perplexity),
group = factor(perplexity),
col = factor(perplexity))) +
geom_boxplot(show.legend = FALSE) +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black", fill="black") +
labs(y = "perplexity")
q1 = ggplot(df_noise_error, aes(x = trust,
y = factor(perplexity),
group = factor(perplexity),
col = factor(perplexity))) +
geom_boxplot() +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black", fill="black") +
labs(y = "")
q2 = ggplot(df_noise_error, aes(x = stress,
y = factor(perplexity),
group = factor(perplexity),
col = factor(perplexity))) +
geom_boxplot() +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black", fill="black") +
labs(y = "")
q3 = ggplot(df_noise_error, aes(x = dist_cor,
y = factor(perplexity),
group = factor(perplexity),
col = factor(perplexity))) +
geom_boxplot() +
stat_summary(fun.y=mean, geom="point", shape=18, size=3, color="black", fill="black") +
labs(y = "")
grid.arrange(p1, q1, p2, q2, p3, q3, ncol = 2)
perp1 = Rtsne(Z, perplexity = perplexity[1])$Y
perp2 = Rtsne(Z, perplexity = perplexity[2])$Y
perp3 = Rtsne(Z, perplexity = perplexity[3])$Y
perp4 = Rtsne(Z, perplexity = perplexity[4])$Y
perp5 = Rtsne(Z, perplexity = perplexity[5])$Y
df = data.frame(x = c(perp1[,1], perp2[,1], perp3[,1], perp4[,1], perp5[,1]),
y = c(perp1[,2], perp2[,2], perp3[,2], perp4[,2], perp5[,2]),
perplexity = rep(perplexity, each = n),
type = rep(c(rep(1, n/2), rep(2, n/2)), 5))
r1 = df %>%
filter(perplexity == 20) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point(show.legend = FALSE) +
labs(title = "Perplexity = 20") +
coord_equal()
r2 = df %>%
filter(perplexity == 30) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point(show.legend = FALSE) +
labs(title = "Perplexity = 30") +
coord_equal()
r3 = df %>%
filter(perplexity == 40) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point(show.legend = FALSE) +
labs(title = "Perplexity = 40") +
coord_equal()
r4 = df %>%
filter(perplexity == 50) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point(show.legend = FALSE) +
labs(title = "Perplexity = 50") +
coord_equal()
r5 = df %>%
filter(perplexity == 60) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point(show.legend = FALSE) +
labs(title = "Perplexity = 60") +
coord_equal()
grid.arrange(r1, r2, r3, r4, r5)
knitr::opts_chunk$set(warning = FALSE, message = FALSE, echo = TRUE)
library(ggplot2)
library(MASS)
library(dplyr)
library(Rtsne)
library(scatterplot3d)
library(viridis)
library(gridExtra)
source("../../../Algorithms/DR metrics.R")
n = 500
r = 3
p = 10
theta = seq(from = 0, to = 2*pi, length.out = n/2 + 1)[-1]
x1 = 5*cos(theta)
y1 = 5*sin(theta)
z1 = rep(0, n/2)
x2 = 5*cos(theta) + 5
y2 = rep(0, n/2)
z2 = 5*sin(theta)
Y = matrix(c(x1, x2, y1, y2, z1, z2), nrow = n, ncol = 3)
Z = cbind(Y, matrix(0, nrow = n, ncol = p-r)) +
matrix(rnorm(n*p, sd = 1), nrow = n, ncol = p)
scatterplot3d(Y)
X_tsne = Rtsne(Y, perplexity = 90)$Y
data.frame(x = X_tsne[,1], y = X_tsne[,2], type = c(rep(1, n/2), rep(2, n/2))) %>%
ggplot(aes(x = x, y = y, col = factor(type))) + geom_point()
perplexity = seq(from = 10, to = 160, by = 10)
b = 20
k = 10
trusts = sheps = vector(length = length(perplexity)*b)
trusts_noise = sheps_noise = vector(length = length(perplexity)*b)
for (i in 1:length(perplexity)) {
for (j in 1:b) {
X_tsne = Rtsne(Z, perplexity = perplexity[i])$Y
trusts[(i-1)*b + j] = trustworthiness_full(Y, X_tsne, k)
sheps[(i-1)*b + j] = dist_cor_full(Y, X_tsne)
trusts_noise[(i-1)*b + j] = trustworthiness_full(Z, X_tsne, k)
sheps_noise[(i-1)*b + j] = dist_cor_full(Z, X_tsne)
}
}
df = data.frame(perplexity = rep(perplexity, each = b),
trust = trusts,
shep = sheps,
trust_noise = trusts_noise,
shep_noise = sheps_noise)
p1 = ggplot(df, aes(x = trust, y = shep, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Trustworthiness", y = "Shepard Goodness", title = "Replicating Signal")
p2 = ggplot(df, aes(x = trust_noise, y = shep_noise, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Trustworthiness", y = "Shepard Goodness", title = "Replicating Signal + Noise")
grid.arrange(p2, p1, nrow = 1)
# save(Y, df, p1, p2, file = "../Data/trust vs shep (links).Rda")
q1 = ggplot(df, aes(x = perplexity, y = trust, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
q2 = ggplot(df, aes(x = perplexity, y = trust_noise, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
q3 = ggplot(df, aes(x = perplexity, y = shep, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Shepard Goodness", title = "Replicating Signal")
q4 = ggplot(df, aes(x = perplexity, y = shep_noise, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Shepard Goodness", title = "Replicating Signal + Noise")
grid.arrange(q2, q1, nrow = 1)
grid.arrange(q4, q3, nrow = 1)
knitr::opts_chunk$set(warning = FALSE, message = FALSE, echo = TRUE)
library(ggplot2)
library(MASS)
library(dplyr)
library(Rtsne)
library(scatterplot3d)
library(viridis)
library(gridExtra)
source("../../../Algorithms/DR metrics.R")
n = 500
r = 3
p = 10
noise_sd = 1.5
theta = seq(from = 0, to = 2*pi, length.out = n/2 + 1)[-1]
x1 = 5*cos(theta)
y1 = 5*sin(theta)
z1 = rep(0, n/2)
x2 = 5*cos(theta) + 5
y2 = rep(0, n/2)
z2 = 5*sin(theta)
Y = matrix(c(x1, x2, y1, y2, z1, z2), nrow = n, ncol = 3)
Z = cbind(Y, matrix(0, nrow = n, ncol = p-r)) +
matrix(rnorm(n*p, sd = noise_sd), nrow = n, ncol = p)
scatterplot3d(Y)
X_tsne = Rtsne(Y, perplexity = 90)$Y
data.frame(x = X_tsne[,1], y = X_tsne[,2], type = c(rep(1, n/2), rep(2, n/2))) %>%
ggplot(aes(x = x, y = y, col = factor(type))) + geom_point()
perplexity = seq(from = 10, to = 160, by = 10)
b = 20
k = 10
trusts = sheps = vector(length = length(perplexity)*b)
trusts_noise = sheps_noise = vector(length = length(perplexity)*b)
for (i in 1:length(perplexity)) {
for (j in 1:b) {
X_tsne = Rtsne(Z, perplexity = perplexity[i])$Y
trusts[(i-1)*b + j] = trustworthiness_full(Y, X_tsne, k)
sheps[(i-1)*b + j] = dist_cor_full(Y, X_tsne)
trusts_noise[(i-1)*b + j] = trustworthiness_full(Z, X_tsne, k)
sheps_noise[(i-1)*b + j] = dist_cor_full(Z, X_tsne)
}
}
df = data.frame(perplexity = rep(perplexity, each = b),
trust = trusts,
shep = sheps,
trust_noise = trusts_noise,
shep_noise = sheps_noise)
p1 = ggplot(df, aes(x = trust, y = shep, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Trustworthiness", y = "Shepard Goodness", title = "Replicating Signal")
p2 = ggplot(df, aes(x = trust_noise, y = shep_noise, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Trustworthiness", y = "Shepard Goodness", title = "Replicating Signal + Noise")
grid.arrange(p2, p1, nrow = 1)
# save(Y, df, p1, p2, file = "../Data/trust vs shep (links).Rda")
q1 = ggplot(df, aes(x = perplexity, y = trust, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
q2 = ggplot(df, aes(x = perplexity, y = trust_noise, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
q3 = ggplot(df, aes(x = perplexity, y = shep, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Shepard Goodness", title = "Replicating Signal")
q4 = ggplot(df, aes(x = perplexity, y = shep_noise, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Shepard Goodness", title = "Replicating Signal + Noise")
grid.arrange(q2, q1, nrow = 1)
grid.arrange(q4, q3, nrow = 1)
n = 500
r = 3
p = 10
noise_sd = 1.5
theta = seq(from = 0, to = 2*pi, length.out = n/2 + 1)[-1]
x1 = 5*cos(theta)
y1 = 5*sin(theta)
z1 = rep(0, n/2)
x2 = 5*cos(theta) + 5
y2 = rep(0, n/2)
z2 = 5*sin(theta)
Y = matrix(c(x1, x2, y1, y2, z1, z2), nrow = n, ncol = 3)
Z = cbind(Y, matrix(0, nrow = n, ncol = p-r)) +
matrix(rnorm(n*p, sd = noise_sd), nrow = n, ncol = p)
scatterplot3d(Y)
X_tsne = Rtsne(Y, perplexity = 40)$Y
data.frame(x = X_tsne[,1], y = X_tsne[,2], type = c(rep(1, n/2), rep(2, n/2))) %>%
ggplot(aes(x = x, y = y, col = factor(type))) + geom_point()
n = 500
r = 3
p = 10
noise_sd = 1.5
theta = seq(from = 0, to = 2*pi, length.out = n/2 + 1)[-1]
x1 = 5*cos(theta)
y1 = 5*sin(theta)
z1 = rep(0, n/2)
x2 = 5*cos(theta) + 5
y2 = rep(0, n/2)
z2 = 5*sin(theta)
Y = matrix(c(x1, x2, y1, y2, z1, z2), nrow = n, ncol = 3)
Z = cbind(Y, matrix(0, nrow = n, ncol = p-r)) +
matrix(rnorm(n*p, sd = noise_sd), nrow = n, ncol = p)
scatterplot3d(Y)
X_tsne = Rtsne(Y, perplexity = 110)$Y
data.frame(x = X_tsne[,1], y = X_tsne[,2], type = c(rep(1, n/2), rep(2, n/2))) %>%
ggplot(aes(x = x, y = y, col = factor(type))) + geom_point()
n = 500
r = 3
p = 10
noise_sd = 1.5
theta = seq(from = 0, to = 2*pi, length.out = n/2 + 1)[-1]
x1 = 5*cos(theta)
y1 = 5*sin(theta)
z1 = rep(0, n/2)
x2 = 5*cos(theta) + 5
y2 = rep(0, n/2)
z2 = 5*sin(theta)
Y = matrix(c(x1, x2, y1, y2, z1, z2), nrow = n, ncol = 3)
Z = cbind(Y, matrix(0, nrow = n, ncol = p-r)) +
matrix(rnorm(n*p, sd = noise_sd), nrow = n, ncol = p)
scatterplot3d(Y)
X_tsne = Rtsne(Y, perplexity = 110)$Y
data.frame(x = X_tsne[,1], y = X_tsne[,2], type = c(rep(1, n/2), rep(2, n/2))) %>%
ggplot(aes(x = x, y = y, col = factor(type))) + geom_point()
n = 500
r = 3
p = 10
noise_sd = 1.5
theta = seq(from = 0, to = 2*pi, length.out = n/2 + 1)[-1]
x1 = 5*cos(theta)
y1 = 5*sin(theta)
z1 = rep(0, n/2)
x2 = 5*cos(theta) + 5
y2 = rep(0, n/2)
z2 = 5*sin(theta)
Y = matrix(c(x1, x2, y1, y2, z1, z2), nrow = n, ncol = 3)
Z = cbind(Y, matrix(0, nrow = n, ncol = p-r)) +
matrix(rnorm(n*p, sd = noise_sd), nrow = n, ncol = p)
scatterplot3d(Y)
X_tsne = Rtsne(Y, perplexity = 40)$Y
data.frame(x = X_tsne[,1], y = X_tsne[,2], type = c(rep(1, n/2), rep(2, n/2))) %>%
ggplot(aes(x = x, y = y, col = factor(type))) + geom_point()
n = 500
r = 3
p = 10
noise_sd = 1.5
theta = seq(from = 0, to = 2*pi, length.out = n/2 + 1)[-1]
x1 = 5*cos(theta)
y1 = 5*sin(theta)
z1 = rep(0, n/2)
x2 = 5*cos(theta) + 5
y2 = rep(0, n/2)
z2 = 5*sin(theta)
Y = matrix(c(x1, x2, y1, y2, z1, z2), nrow = n, ncol = 3)
Z = cbind(Y, matrix(0, nrow = n, ncol = p-r)) +
matrix(rnorm(n*p, sd = noise_sd), nrow = n, ncol = p)
scatterplot3d(Y)
X_tsne = Rtsne(Y, perplexity = 100)$Y
data.frame(x = X_tsne[,1], y = X_tsne[,2], type = c(rep(1, n/2), rep(2, n/2))) %>%
ggplot(aes(x = x, y = y, col = factor(type))) + geom_point()
data.frame(x = X_tsne[,1], y = X_tsne[,2], type = c(rep(1, n/2), rep(2, n/2))) %>%
ggplot(aes(x = x, y = y, col = factor(type))) + geom_point() + coord_equal()
n = 500
r = 3
p = 10
noise_sd = 1.5
theta = seq(from = 0, to = 2*pi, length.out = n/2 + 1)[-1]
x1 = 5*cos(theta)
y1 = 5*sin(theta)
z1 = rep(0, n/2)
x2 = 5*cos(theta) + 5
y2 = rep(0, n/2)
z2 = 5*sin(theta)
Y = matrix(c(x1, x2, y1, y2, z1, z2), nrow = n, ncol = 3)
Z = cbind(Y, matrix(0, nrow = n, ncol = p-r)) +
matrix(rnorm(n*p, sd = noise_sd), nrow = n, ncol = p)
scatterplot3d(Y)
X_tsne = Rtsne(Y, perplexity = 110)$Y
data.frame(x = X_tsne[,1], y = X_tsne[,2], type = c(rep(1, n/2), rep(2, n/2))) %>%
ggplot(aes(x = x, y = y, col = factor(type))) + geom_point() + coord_equal()
n = 500
r = 3
p = 10
noise_sd = 1.5
theta = seq(from = 0, to = 2*pi, length.out = n/2 + 1)[-1]
x1 = 5*cos(theta)
y1 = 5*sin(theta)
z1 = rep(0, n/2)
x2 = 5*cos(theta) + 5
y2 = rep(0, n/2)
z2 = 5*sin(theta)
Y = matrix(c(x1, x2, y1, y2, z1, z2), nrow = n, ncol = 3)
Z = cbind(Y, matrix(0, nrow = n, ncol = p-r)) +
matrix(rnorm(n*p, sd = noise_sd), nrow = n, ncol = p)
scatterplot3d(Y)
X_tsne = Rtsne(Y, perplexity = 110)$Y
data.frame(x = X_tsne[,1], y = X_tsne[,2], type = c(rep(1, n/2), rep(2, n/2))) %>%
ggplot(aes(x = x, y = y, col = factor(type))) + geom_point() + coord_equal()
knitr::opts_chunk$set(warning = FALSE, message = FALSE, echo = TRUE)
library(ggplot2)
library(MASS)
library(dplyr)
library(Rtsne)
library(scatterplot3d)
library(viridis)
library(gridExtra)
source("../../../Algorithms/DR metrics.R")
n = 500
r = 3
p = 10
noise_sd = 1
theta = seq(from = 0, to = 2*pi, length.out = n/2 + 1)[-1]
x1 = 5*cos(theta)
y1 = 5*sin(theta)
z1 = rep(0, n/2)
x2 = 5*cos(theta) + 5
y2 = rep(0, n/2)
z2 = 5*sin(theta)
Y = matrix(c(x1, x2, y1, y2, z1, z2), nrow = n, ncol = 3)
Z = cbind(Y, matrix(0, nrow = n, ncol = p-r)) +
matrix(rnorm(n*p, sd = noise_sd), nrow = n, ncol = p)
scatterplot3d(Y)
X_tsne = Rtsne(Y, perplexity = 110)$Y
data.frame(x = X_tsne[,1], y = X_tsne[,2], type = c(rep(1, n/2), rep(2, n/2))) %>%
ggplot(aes(x = x, y = y, col = factor(type))) + geom_point() + coord_equal()
perplexity = seq(from = 80, to = 130, by = 5)
b = 20
k = 10
trusts = sheps = vector(length = length(perplexity)*b)
trusts_noise = sheps_noise = vector(length = length(perplexity)*b)
for (i in 1:length(perplexity)) {
for (j in 1:b) {
X_tsne = Rtsne(Z, perplexity = perplexity[i])$Y
trusts[(i-1)*b + j] = trustworthiness_full(Y, X_tsne, k)
sheps[(i-1)*b + j] = dist_cor_full(Y, X_tsne)
trusts_noise[(i-1)*b + j] = trustworthiness_full(Z, X_tsne, k)
sheps_noise[(i-1)*b + j] = dist_cor_full(Z, X_tsne)
}
}
df = data.frame(perplexity = rep(perplexity, each = b),
trust = trusts,
shep = sheps,
trust_noise = trusts_noise,
shep_noise = sheps_noise)
p1 = ggplot(df, aes(x = trust, y = shep, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Trustworthiness", y = "Shepard Goodness", title = "Replicating Signal")
p2 = ggplot(df, aes(x = trust_noise, y = shep_noise, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Trustworthiness", y = "Shepard Goodness", title = "Replicating Signal + Noise")
grid.arrange(p2, p1, nrow = 1)
# save(Y, df, p1, p2, file = "../Data/trust vs shep (links).Rda")
q1 = ggplot(df, aes(x = perplexity, y = trust, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
q2 = ggplot(df, aes(x = perplexity, y = trust_noise, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
q3 = ggplot(df, aes(x = perplexity, y = shep, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Shepard Goodness", title = "Replicating Signal")
q4 = ggplot(df, aes(x = perplexity, y = shep_noise, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Shepard Goodness", title = "Replicating Signal + Noise")
grid.arrange(q2, q1, nrow = 1)
grid.arrange(q4, q3, nrow = 1)
knitr::opts_chunk$set(warning = FALSE, message = FALSE, echo = TRUE)
library(ggplot2)
library(MASS)
library(dplyr)
library(Rtsne)
library(scatterplot3d)
library(viridis)
library(gridExtra)
source("../../../Algorithms/DR metrics.R")
n = 500
r = 3
p = 10
noise_sd = 1
theta = seq(from = 0, to = 2*pi, length.out = n/2 + 1)[-1]
x1 = 5*cos(theta)
y1 = 5*sin(theta)
z1 = rep(0, n/2)
x2 = 5*cos(theta) + 5
y2 = rep(0, n/2)
z2 = 5*sin(theta)
Y = matrix(c(x1, x2, y1, y2, z1, z2), nrow = n, ncol = 3)
Z = cbind(Y, matrix(0, nrow = n, ncol = p-r)) +
matrix(rnorm(n*p, sd = noise_sd), nrow = n, ncol = p)
scatterplot3d(Y)
X_tsne = Rtsne(Y, perplexity = 30)$Y
data.frame(x = X_tsne[,1], y = X_tsne[,2], type = c(rep(1, n/2), rep(2, n/2))) %>%
ggplot(aes(x = x, y = y, col = factor(type))) + geom_point() + coord_equal()
perplexity = seq(from = 20, to = 50, by = 5)
b = 20
k = 10
trusts = sheps = vector(length = length(perplexity)*b)
for (i in 1:length(perplexity)) {
for (j in 1:b) {
X_tsne = Rtsne(Z, perplexity = perplexity[i])$Y
trusts[(i-1)*b + j] = trustworthiness_full(Y, X_tsne, k)
sheps[(i-1)*b + j] = dist_cor_full(Y, X_tsne)
}
}
perplexity_noise = seq(from = 80, to = 130, by = 5)
b = 20
k = 10
trusts_noise = sheps_noise = vector(length = length(perplexity)*b)
for (i in 1:length(perplexity)) {
for (j in 1:b) {
X_tsne = Rtsne(Z, perplexity = perplexity[i])$Y
trusts_noise[(i-1)*b + j] = trustworthiness_full(Z, X_tsne, k)
sheps_noise[(i-1)*b + j] = dist_cor_full(Z, X_tsne)
}
}
df = data.frame(perplexity = rep(perplexity, each = b),
trust = trusts,
shep = sheps)
df_noise = data.frame(perplexity = rep(perplexity_noise, each = b),
trust = trusts_noise,
shep = sheps_noise)
knitr::opts_chunk$set(warning = FALSE, message = FALSE, echo = TRUE)
library(ggplot2)
library(MASS)
library(dplyr)
library(Rtsne)
library(scatterplot3d)
library(viridis)
library(gridExtra)
source("../../../../Algorithms/DR metrics.R")
knitr::opts_chunk$set(warning = FALSE, message = FALSE, echo = TRUE)
library(ggplot2)
library(MASS)
library(dplyr)
library(Rtsne)
library(scatterplot3d)
library(viridis)
library(gridExtra)
source("../../../Algorithms/DR metrics.R")
source("~/.active-rstudio-document")

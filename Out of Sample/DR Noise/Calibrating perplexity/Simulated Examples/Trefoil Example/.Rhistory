knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(viridis)
load("Trefoil vary sd.Rda")
data.frame(x = best_X[,1], y = best_X[,2], type = rep(c(1,2), c(250, 250))) %>%
ggplot(aes(x = x, y = y, col = factor(type))) + geom_point() + coord_equal()
data.frame(x = best_X_noise[,1], y = best_X_noise[,2], type = rep(c(1,2), c(250, 250))) %>%
ggplot(aes(x = x, y = y, col = factor(type))) + geom_point() + coord_equal()
dfs = list(df_sd1, df_sd2, df_sd3, df_sd4, df_sd5, df_sd6)
dfs_noise = list(df_sd1_noise, df_sd2_noise, df_sd3_noise, df_sd4_noise, df_sd5_noise, df_sd6_noise)
best_perp = sapply(dfs, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
best_perp_noise = sapply(dfs_noise, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
data.frame(sd = rep(c(seq(from=0.5, to=3, by=0.5)), 2),
perp = c(best_perp, best_perp_noise),
type = rep(c("signal", "noise"), each=6)) %>%
ggplot(aes(x=sd, y=perp, group=type, color=type)) +
geom_point() +
geom_line() +
scale_color_discrete(name="Comparison Data", labels=c("Signal","Signal + Noise")) +
labs(x="Standard Deviation of Noise",
y="Optimal Perplexity")
for (i in 1:6) {
p1 = ggplot(dfs[[i]], aes(x = perplexity, y = trust, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
p2 = ggplot(dfs_noise[[i]], aes(x = perplexity, y = trust, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
grid.arrange(p2, p1, nrow = 1)
}
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(viridis)
library(cetcolor)
load("Trefoil vary sd.Rda")
q1 = data.frame(x = best_X[,1], y = best_X[,2], color = 1:500) %>%
ggplot(aes(x = x, y = y, col = color)) +
geom_point() +
scale_color_gradientn(colours = cet_pal(10, name = "c1"), guide="none") +
coord_equal() +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 100)")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], color = 1:500) %>%
ggplot(aes(x = x, y = y, col = color)) +
geom_point() +
scale_color_gradientn(colours = cet_pal(10, name = "c1"), guide="none") +
coord_equal() +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 35)")
grid.arrange(q2, q1, nrow = 1)
dfs = list(df_sd1, df_sd2, df_sd3, df_sd4, df_sd5, df_sd6)
dfs_noise = list(df_sd1_noise, df_sd2_noise, df_sd3_noise, df_sd4_noise, df_sd5_noise, df_sd6_noise)
best_perp = sapply(dfs, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
best_perp_noise = sapply(dfs_noise, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
r = data.frame(sd = rep(c(seq(from=0.5, to=3, by=0.5)), 2),
perp = c(best_perp, best_perp_noise),
type = rep(c("signal", "noise"), each=6)) %>%
ggplot(aes(x=sd, y=perp, group=type, color=type)) +
geom_point() +
geom_line() +
scale_color_brewer(limits=c("signal", "noise"), labels=c("Signal", "Signal + Noise"), name="Comparison Data", palette="Dark2") +
labs(x="Standard Deviation of Noise",
y="Optimal Perplexity")
for (i in 1:6) {
p1 = ggplot(dfs[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
p2 = ggplot(dfs_noise[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
grid.arrange(p2, p1, nrow = 1)
}
grid.arrange(p1, p2, q1, q2, r, nrow=3)
?grid.arrange
grid.arrange(p1, p2, q1, q2, r,
layout_matrix=rbind(c(1,1,2,2),
c(3,3,4,4),
c(NA,5,5,NA)))
grid.arrange(p1, p2, q1, q2, r,
layout_matrix=rbind(c(1,1,2,2),
c(3,3,4,4),
c(NA,5,5,NA)))
grid.arrange(p1, p2, q1, q2, r,
layout_matrix=rbind(c(1,1,2,2),
c(3,3,4,4),
c(5,5,5,5)))
grid.arrange(p1, p2, q1, q2, r,
layout_matrix=rbind(c(1,1,2,2),
c(3,3,4,4),
c(5,5,5,5)))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
load("Mammoth vary sd.Rda")
rotate = function(theta) {
matrix(c(cos(theta), sin(theta), -sin(theta), cos(theta)), nrow=2)
}
best_X = best_X %*% rotate(0.8*pi)
color_vec = brewer.pal(10, "Paired")[col]
q1 = data.frame(x = best_X[,1], y = best_X[,2], col = factor(col)) %>%
ggplot(aes(x = x, y = y, color = col)) +
geom_point() +
scale_color_manual(values = brewer.pal(10, "Paired")) +
labs(x="", y="", title="Replicating Signal (Perplexity = 80)")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], col = factor(col)) %>%
ggplot(aes(x = x, y = y, color = col)) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 30)")
grid.arrange(q2, q1, nrow = 1)
dfs = list(df_sd1, df_sd2, df_sd3, df_sd4, df_sd5, df_sd6)
dfs_noise = list(df_sd1_noise, df_sd2_noise, df_sd3_noise, df_sd4_noise, df_sd5_noise, df_sd6_noise)
best_perp = sapply(dfs, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
best_perp_noise = sapply(dfs_noise, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
data.frame(sd = rep(c(seq(from=5, to=30, by=5)), 2),
perp = c(best_perp, best_perp_noise),
type = rep(c("signal", "noise"), each=6)) %>%
ggplot(aes(x=sd, y=perp, group=type, color=type)) +
geom_point() +
geom_line() +
scale_color_brewer(limits=c("signal", "noise"),
labels=c("Signal", "Signal + Noise"),
name="Comparison Data",
palette="Dark2") +
labs(x="Standard Deviation of Noise",
y="Optimal Perplexity")
for (i in 1:6) {
p1 = ggplot(dfs[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
p2 = ggplot(dfs_noise[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
grid.arrange(p2, p1, nrow = 1)
}
grid.arrange(p1, p2, q1, q2, r,
layout_matrix=rbind(c(1,1,2,2),
c(3,3,4,4),
c(5,5,5,5)))
grid.arrange(p2, p1, q2, q1, r,
layout_matrix=rbind(c(1,1,2,2),
c(3,3,4,4),
c(5,5,5,5)))
grid.arrange(p2, p1, q2, q1, r,
layout_matrix=rbind(c(1,1,2,2),
c(3,3,4,4),
c(5,5,5,5)))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(viridis)
library(cetcolor)
load("Trefoil vary sd.Rda")
q1 = data.frame(x = best_X[,1], y = best_X[,2], color = 1:500) %>%
ggplot(aes(x = x, y = y, col = color)) +
geom_point() +
scale_color_gradientn(colours = cet_pal(10, name = "c1"), guide="none") +
coord_equal() +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 100)")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], color = 1:500) %>%
ggplot(aes(x = x, y = y, col = color)) +
geom_point() +
scale_color_gradientn(colours = cet_pal(10, name = "c1"), guide="none") +
coord_equal() +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 35)")
grid.arrange(q2, q1, nrow = 1)
dfs = list(df_sd1, df_sd2, df_sd3, df_sd4, df_sd5, df_sd6)
dfs_noise = list(df_sd1_noise, df_sd2_noise, df_sd3_noise, df_sd4_noise, df_sd5_noise, df_sd6_noise)
best_perp = sapply(dfs, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
best_perp_noise = sapply(dfs_noise, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
r = data.frame(sd = rep(c(seq(from=0.5, to=3, by=0.5)), 2),
perp = c(best_perp, best_perp_noise),
type = rep(c("signal", "noise"), each=6)) %>%
ggplot(aes(x=sd, y=perp, group=type, color=type)) +
geom_point() +
geom_line() +
scale_color_brewer(limits=c("signal", "noise"), labels=c("Signal", "Signal + Noise"), name="Comparison Data", palette="Dark2") +
labs(x="Standard Deviation of Noise",
y="Optimal Perplexity")
for (i in 1:6) {
p1 = ggplot(dfs[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
p2 = ggplot(dfs_noise[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
grid.arrange(p2, p1, nrow = 1)
}
grid.arrange(p2, p1, q2, q1, r,
layout_matrix=rbind(c(1,1,2,2),
c(3,3,4,4),
c(5,5,5,5)))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
load("Mammoth vary sd.Rda")
rotate = function(theta) {
matrix(c(cos(theta), sin(theta), -sin(theta), cos(theta)), nrow=2)
}
best_X = best_X %*% rotate(0.8*pi)
color_vec = brewer.pal(10, "Paired")[col]
q1 = data.frame(x = best_X[,1], y = best_X[,2], col = factor(col)) %>%
ggplot(aes(x = x, y = y, color = col)) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal (Perplexity = 80)")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], col = factor(col)) %>%
ggplot(aes(x = x, y = y, color = col)) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 30)")
grid.arrange(q2, q1, nrow = 1)
dfs = list(df_sd1, df_sd2, df_sd3, df_sd4, df_sd5, df_sd6)
dfs_noise = list(df_sd1_noise, df_sd2_noise, df_sd3_noise, df_sd4_noise, df_sd5_noise, df_sd6_noise)
best_perp = sapply(dfs, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
best_perp_noise = sapply(dfs_noise, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
data.frame(sd = rep(c(seq(from=5, to=30, by=5)), 2),
perp = c(best_perp, best_perp_noise),
type = rep(c("signal", "noise"), each=6)) %>%
ggplot(aes(x=sd, y=perp, group=type, color=type)) +
geom_point() +
geom_line() +
scale_color_brewer(limits=c("signal", "noise"),
labels=c("Signal", "Signal + Noise"),
name="Comparison Data",
palette="Dark2") +
labs(x="Standard Deviation of Noise",
y="Optimal Perplexity")
for (i in 1:6) {
p1 = ggplot(dfs[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
p2 = ggplot(dfs_noise[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
grid.arrange(p2, p1, nrow = 1)
}
grid.arrange(p2, p1, q2, q1, r,
layout_matrix=rbind(c(1,1,2,2),
c(3,3,4,4),
c(5,5,5,5)))

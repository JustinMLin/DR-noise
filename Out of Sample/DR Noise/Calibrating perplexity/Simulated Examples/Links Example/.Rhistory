scale_color_discrete(limits=c("signal", "noise"), labels=c("Signal", "Signal + Noise"), name="Comparison Data") +
labs(x="Standard Deviation of Noise",
y="Optimal Perplexity")
for (i in 1:6) {
p1 = ggplot(dfs[[i]], aes(x = perplexity, y = trust, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
p2 = ggplot(dfs_noise[[i]], aes(x = perplexity, y = trust, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
grid.arrange(p2, p1, nrow = 1)
}
dfs = list(df_sd1, df_sd2, df_sd3, df_sd4, df_sd5, df_sd6)
dfs_noise = list(df_sd1_noise, df_sd2_noise, df_sd3_noise, df_sd4_noise, df_sd5_noise, df_sd6_noise)
best_perp = sapply(dfs, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
best_perp_noise = sapply(dfs_noise, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
data.frame(sd = rep(c(seq(from=0.5, to=3, by=0.5)), 2),
perp = c(best_perp, best_perp_noise),
type = rep(c("signal", "noise"), each=6)) %>%
ggplot(aes(x=sd, y=perp, group=type, color=type)) +
geom_point() +
geom_line() +
scale_color_discrete(limits=c("signal", "noise"), labels=c("Signal", "Signal + Noise"), name="Comparison Data") +
labs(x="Standard Deviation of Noise",
y="Optimal Perplexity")
dfs = list(df_sd1, df_sd2, df_sd3, df_sd4, df_sd5, df_sd6)
dfs_noise = list(df_sd1_noise, df_sd2_noise, df_sd3_noise, df_sd4_noise, df_sd5_noise, df_sd6_noise)
best_perp = sapply(dfs, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
best_perp_noise = sapply(dfs_noise, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
data.frame(sd = rep(c(seq(from=0.5, to=3, by=0.5)), 2),
perp = c(best_perp, best_perp_noise),
type = rep(c("signal", "noise"), each=6)) %>%
ggplot(aes(x=sd, y=perp, group=type, color=type)) +
geom_point() +
geom_line() +
scale_color_brewer(limits=c("signal", "noise"),
labels=c("Signal", "Signal + Noise"),
name="Comparison Data",
palette="Dark2") +
labs(x="Standard Deviation of Noise",
y="Optimal Perplexity")
for (i in 1:6) {
p1 = ggplot(dfs[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
p2 = ggplot(dfs_noise[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
sgeom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
grid.arrange(p2, p1, nrow = 1)
}
for (i in 1:6) {
p1 = ggplot(dfs[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
p2 = ggplot(dfs_noise[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
grid.arrange(p2, p1, nrow = 1)
}
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(gridExtra)
library(viridis)
load("trust vs shep (umap CyTOF).Rda")
grid.arrange(p2, p1, nrow = 1)
q1 = ggplot(df, aes(x = n_neighbors, y = trust, col = n_neighbors)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "n_neighbors", y = "Trustworthiness", title = "Replicating Signal")
q2 = ggplot(df, aes(x = n_neighbors, y = trust_noise, col = n_neighbors)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "n_neighbors", y = "Trustworthiness", title = "Replicating Signal + Noise")
q3 = ggplot(df, aes(x = n_neighbors, y = shep, col = n_neighbors)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "n_neighbors", y = "Shepard Goodness", title = "Replicating Signal")
q4 = ggplot(df, aes(x = n_neighbors, y = shep_noise, col = n_neighbors)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "n_neighbors", y = "Shepard Goodness", title = "Replicating Signal + Noise")
grid.arrange(q2, q1, nrow = 1)
grid.arrange(q4, q3, nrow = 1)
q1 = ggplot(df, aes(x = n_neighbors, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "n_neighbors", y = "Trustworthiness", title = "Replicating Signal")
q2 = ggplot(df, aes(x = n_neighbors, y = trust_noise)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "n_neighbors", y = "Trustworthiness", title = "Replicating Signal + Noise")
q3 = ggplot(df, aes(x = n_neighbors, y = shep, col = n_neighbors)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "n_neighbors", y = "Shepard Goodness", title = "Replicating Signal")
q4 = ggplot(df, aes(x = n_neighbors, y = shep_noise, col = n_neighbors)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "n_neighbors", y = "Shepard Goodness", title = "Replicating Signal + Noise")
grid.arrange(q2, q1, nrow = 1)
grid.arrange(q4, q3, nrow = 1)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(gridExtra)
library(viridis)
load("trust vs shep (10 dim scRNA-seq).Rda")
grid.arrange(p2, p1, nrow = 1)
q1 = ggplot(df, aes(x = perplexity, y = trust, col = perplexity)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
q2 = ggplot(df, aes(x = perplexity, y = trust_noise, col = perplexity)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
q3 = ggplot(df, aes(x = perplexity, y = shep, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Shepard Goodness", title = "Replicating Signal")
q4 = ggplot(df, aes(x = perplexity, y = shep_noise, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Shepard Goodness", title = "Replicating Signal + Noise")
grid.arrange(q2, q1, nrow = 1)
grid.arrange(q4, q3, nrow = 1)
grid.arrange(p1, q1, nrow = 1)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(gridExtra)
library(viridis)
load("trust vs shep (5 dim scRNA-seq).Rda")
grid.arrange(p2, p1, nrow = 1)
q1 = ggplot(df, aes(x = perplexity, y = trust, col = perplexity)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
q2 = ggplot(df, aes(x = perplexity, y = trust_noise, col = perplexity)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
q3 = ggplot(df, aes(x = perplexity, y = shep, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Shepard Goodness", title = "Replicating Signal")
q4 = ggplot(df, aes(x = perplexity, y = shep_noise, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Shepard Goodness", title = "Replicating Signal + Noise")
grid.arrange(q2, q1, nrow = 1)
grid.arrange(q4, q3, nrow = 1)
grid.arrange(p1, q1, nrow = 1)
q1 = ggplot(df, aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
q2 = ggplot(df, aes(x = perplexity, y = trust_noise)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
q3 = ggplot(df, aes(x = perplexity, y = shep, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Shepard Goodness", title = "Replicating Signal")
q4 = ggplot(df, aes(x = perplexity, y = shep_noise, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Shepard Goodness", title = "Replicating Signal + Noise")
grid.arrange(q2, q1, nrow = 1)
grid.arrange(q4, q3, nrow = 1)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(gridExtra)
library(viridis)
load("trust vs shep (10 dim scRNA-seq).Rda")
grid.arrange(p2, p1, nrow = 1)
q1 = ggplot(df, aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
q2 = ggplot(df, aes(x = perplexity, y = trust_noise)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
q3 = ggplot(df, aes(x = perplexity, y = shep, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Shepard Goodness", title = "Replicating Signal")
q4 = ggplot(df, aes(x = perplexity, y = shep_noise, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Shepard Goodness", title = "Replicating Signal + Noise")
grid.arrange(q2, q1, nrow = 1)
grid.arrange(q4, q3, nrow = 1)
grid.arrange(p1, q1, nrow = 1)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(gridExtra)
library(viridis)
load("trust vs shep (8 dim enterotype).Rda")
grid.arrange(p2, p1, nrow = 1)
q1 = ggplot(df, aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
q2 = ggplot(df, aes(x = perplexity, y = trust_noise)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
q3 = ggplot(df, aes(x = perplexity, y = shep, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Shepard Goodness", title = "Replicating Signal")
q4 = ggplot(df, aes(x = perplexity, y = shep_noise, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Shepard Goodness", title = "Replicating Signal + Noise")
grid.arrange(q2, q1, nrow = 1)
grid.arrange(q4, q3, nrow = 1)
grid.arrange(p1, q1, nrow = 1)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(gridExtra)
library(viridis)
load("trust vs shep (5 dim enterotype).Rda")
grid.arrange(p2, p1, nrow = 1)
q1 = ggplot(df, aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
q2 = ggplot(df, aes(x = perplexity, y = trust_noise)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
q3 = ggplot(df, aes(x = perplexity, y = shep, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Shepard Goodness", title = "Replicating Signal")
q4 = ggplot(df, aes(x = perplexity, y = shep_noise, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Shepard Goodness", title = "Replicating Signal + Noise")
grid.arrange(q2, q1, nrow = 1)
grid.arrange(q4, q3, nrow = 1)
grid.arrange(p1, q1, nrow = 1)
?plot3d
library(rgl)
?plot3d
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rgl)
Y = as.matrix(read_csv("mammoth_3d.csv", show_col_types=FALSE))
Y = matrix(as.numeric(Y), ncol = 3)
col = kmeans(Y, centers=10, iter.max=100, nstart=10)$cluster
plot3d(x=Y[,1], y=Y[,2], z=Y[,3], col=col, xlab="", ylab="", zlab="", axes=FALSE)
# rgl.snapshot("mammoth.png")
col
unique(col)
plot3d(x=Y[,1], y=Y[,2], z=Y[,3], col=col, xlab="", ylab="", zlab="", axes=FALSE, palette=rainbow(10))
# rgl.snapshot("mammoth.png")
plot3d(x=Y[,1], y=Y[,2], z=Y[,3], col=col, xlab="", ylab="", zlab="", axes=FALSE, palette=rainbow(10))
plot3d(x=Y[,1], y=Y[,2], z=Y[,3], col=col, xlab="", ylab="", zlab="", axes=FALSE, palette=rainbow(5))
?rainbow
plot3d(x=Y[,1], y=Y[,2], z=Y[,3], col=col, xlab="", ylab="", zlab="", axes=FALSE, palette=rainbow(1))
# rgl.snapshot("mammoth.png")
plot3d(x=Y[,1], y=Y[,2], z=Y[,3], col=col, xlab="", ylab="", zlab="", axes=FALSE)
# rgl.snapshot("mammoth.png")
plot3d(x=Y[,1], y=Y[,2], z=Y[,3], col="#34E", xlab="", ylab="", zlab="", axes=FALSE)
?col2rgb
colors()
?col2rgb
palette()
plot3d
library(RColorBrewer)
RColorBrewer(10)
?RColorBrewer
brewer.pal(10, "Dark2")
brewer.pal(10, "Set3")
display.brewer.pal(10, "Set3")
?RColorBrewer
brewew.pal(10, "Set3")[col]
brewer.pal(10, "Set3")[col]
plot3d(x=Y[,1], y=Y[,2], z=Y[,3], col=brewer.pal(10, "Set3")[col], xlab="", ylab="", zlab="", axes=FALSE)
# rgl.snapshot("mammoth.png")
display.brewer.pal(10, "Paired")
plot3d(x=Y[,1], y=Y[,2], z=Y[,3], col=brewer.pal(10, "Paired")[col], xlab="", ylab="", zlab="", axes=FALSE)
# rgl.snapshot("mammoth.png")
rgl.snapshot("mammoth.png")
rotate = function(theta) {
matrix(c(cos(theta), sin(theta), -sin(theta), cos(theta)), nrow=2)
}
best_X = best_X %*% rotate(0.8*pi)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
load("Mammoth vary sd.Rda")
rotate = function(theta) {
matrix(c(cos(theta), sin(theta), -sin(theta), cos(theta)), nrow=2)
}
best_X = best_X %*% rotate(0.8*pi)
color_vec = brewer.pal(10, "Paired")[col]
q1 = data.frame(x = best_X[,1], y = best_X[,2], col = color_vec) %>%
ggplot(aes(x = x, y = y, color = col)) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal (Perplexity = 80)")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], col = factor(col)) %>%
ggplot(aes(x = x, y = y, color = col)) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 30)")
grid.arrange(q2, q1, nrow = 1)
q1 = data.frame(x = best_X[,1], y = best_X[,2], col = color_vec) %>%
ggplot(aes(x = x, y = y, color = col)) +
geom_point() +
scale_color_brewer(guide="none", palette="Paired") +
labs(x="", y="", title="Replicating Signal (Perplexity = 80)")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], col = factor(col)) %>%
ggplot(aes(x = x, y = y, color = col)) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 30)")
grid.arrange(q2, q1, nrow = 1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rgl)
library(RColorBrewer)
Y = as.matrix(read_csv("mammoth_3d.csv", show_col_types=FALSE))
Y = matrix(as.numeric(Y), ncol = 3)
col = kmeans(Y, centers=10, iter.max=100, nstart=10)$cluster
brewer.pal(10, "Set3")[col]
plot3d(x=Y[,1], y=Y[,2], z=Y[,3], col=brewer.pal(10, "Paired")[col], xlab="", ylab="", zlab="", axes=FALSE)
# rgl.snapshot("mammoth.png")
q1 = data.frame(x = best_X[,1], y = best_X[,2],) %>%
ggplot(aes(x = x, y = y, color = color_vec)) +
geom_point() +
scale_color_brewer(guide="none", palette="Paired") +
labs(x="", y="", title="Replicating Signal (Perplexity = 80)")
q1 = data.frame(x = best_X[,1], y = best_X[,2]) %>%
ggplot(aes(x = x, y = y, color = color_vec)) +
geom_point() +
scale_color_brewer(guide="none", palette="Paired") +
labs(x="", y="", title="Replicating Signal (Perplexity = 80)")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], col = factor(col)) %>%
ggplot(aes(x = x, y = y, color = col)) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 30)")
grid.arrange(q2, q1, nrow = 1)
color_vec
q1 = data.frame(x = best_X[,1], y = best_X[,2]) %>%
ggplot(aes(x = x, y = y, color = color_vec)) +
geom_point() +
scale_color_brewer(guide="none", palette="Paired") +
labs(x="", y="", title="Replicating Signal (Perplexity = 80)")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], col = factor(col)) %>%
ggplot(aes(x = x, y = y, color = col)) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 30)")
grid.arrange(q2, q1, nrow = 1)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
load("Mammoth vary sd.Rda")
rotate = function(theta) {
matrix(c(cos(theta), sin(theta), -sin(theta), cos(theta)), nrow=2)
}
best_X = best_X %*% rotate(0.8*pi)
color_vec = brewer.pal(10, "Paired")[col]
q1 = data.frame(x = best_X[,1], y = best_X[,2]) %>%
ggplot(aes(x = x, y = y, color = color_vec)) +
geom_point() +
scale_color_brewer(guide="none", palette="Paired") +
labs(x="", y="", title="Replicating Signal (Perplexity = 80)")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2]) %>%
ggplot(aes(x = x, y = y, color = color_vec)) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 30)")
grid.arrange(q2, q1, nrow = 1)
dfs = list(df_sd1, df_sd2, df_sd3, df_sd4, df_sd5, df_sd6)
dfs_noise = list(df_sd1_noise, df_sd2_noise, df_sd3_noise, df_sd4_noise, df_sd5_noise, df_sd6_noise)
best_perp = sapply(dfs, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
best_perp_noise = sapply(dfs_noise, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
data.frame(sd = rep(c(seq(from=0.5, to=3, by=0.5)), 2),
perp = c(best_perp, best_perp_noise),
type = rep(c("signal", "noise"), each=6)) %>%
ggplot(aes(x=sd, y=perp, group=type, color=type)) +
geom_point() +
geom_line() +
scale_color_brewer(limits=c("signal", "noise"),
labels=c("Signal", "Signal + Noise"),
name="Comparison Data",
palette="Dark2") +
labs(x="Standard Deviation of Noise",
y="Optimal Perplexity")
for (i in 1:6) {
p1 = ggplot(dfs[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
p2 = ggplot(dfs_noise[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
grid.arrange(p2, p1, nrow = 1)
}
color_vec
length(color_vec)
Y = as.matrix(read_csv("mammoth_3d.csv", show_col_types=FALSE))
Y = matrix(as.numeric(Y), ncol = 3)
Y = as.matrix(read_csv("mammoth_3d.csv", show_col_types=FALSE))
Y = matrix(as.numeric(Y), ncol = 3)
col = kmeans(Y, centers=10, iter.max=100, nstart=10)$cluster
brewer.pal(10, "Set3")[col]
plot3d(x=Y[,1], y=Y[,2], z=Y[,3], col=brewer.pal(10, "Paired")[col], xlab="", ylab="", zlab="", axes=FALSE)
# rgl.snapshot("mammoth.png")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
load("Mammoth vary sd.Rda")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
load("Mammoth vary sd.Rda")
col
q1 = data.frame(x = best_X[,1], y = best_X[,2], col = color_vec) %>%
ggplot(aes(x = x, y = y, color = col)) +
geom_point() +
scale_color_manual(values = brewew.pal(10, "Paired")) +
labs(x="", y="", title="Replicating Signal (Perplexity = 80)")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
load("Mammoth vary sd.Rda")
rotate = function(theta) {
matrix(c(cos(theta), sin(theta), -sin(theta), cos(theta)), nrow=2)
}
best_X = best_X %*% rotate(0.8*pi)
color_vec = brewer.pal(10, "Paired")[col]
q1 = data.frame(x = best_X[,1], y = best_X[,2], col = factr(col)) %>%
ggplot(aes(x = x, y = y, color = col)) +
geom_point() +
scale_color_manual(values = brewew.pal(10, "Paired")) +
labs(x="", y="", title="Replicating Signal (Perplexity = 80)")
q1 = data.frame(x = best_X[,1], y = best_X[,2], col = factor(col)) %>%
ggplot(aes(x = x, y = y, color = col)) +
geom_point() +
scale_color_manual(values = brewew.pal(10, "Paired")) +
labs(x="", y="", title="Replicating Signal (Perplexity = 80)")
q1 = data.frame(x = best_X[,1], y = best_X[,2], col = factor(col)) %>%
ggplot(aes(x = x, y = y, color = col)) +
geom_point() +
scale_color_manual(values = brewer.pal(10, "Paired")) +
labs(x="", y="", title="Replicating Signal (Perplexity = 80)")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], col = factor(col)) %>%
ggplot(aes(x = x, y = y, color = col)) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 30)")
grid.arrange(q2, q1, nrow = 1)
q1 = data.frame(x = best_X[,1], y = best_X[,2], col = factor(col)) %>%
ggplot(aes(x = x, y = y, color = col)) +
geom_point() +
scale_color_manual(values = brewer.pal(10, "Paired")) +
labs(x="", y="", title="Replicating Signal (Perplexity = 80)")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], col = factor(col)) %>%
ggplot(aes(x = x, y = y, color = col)) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 30)")
grid.arrange(q2, q1, nrow = 1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rgl)
library(RColorBrewer)
Y = as.matrix(read_csv("mammoth_3d.csv", show_col_types=FALSE))
Y = matrix(as.numeric(Y), ncol = 3)
col = kmeans(Y, centers=10, iter.max=100, nstart=10)$cluster
brewer.pal(10, "Set3")[col]
plot3d(x=Y[,1], y=Y[,2], z=Y[,3], col=brewer.pal(10, "Paired")[col], xlab="", ylab="", zlab="", axes=FALSE)
# rgl.snapshot("mammoth.png")
colored_mammoth = cbind(Y, col)
save(colored_mammoth, file="colored_mammoth.Rda")

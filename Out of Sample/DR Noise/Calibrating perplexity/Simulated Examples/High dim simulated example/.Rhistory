scale_color_gradientn(colours = cet_pal(10, name = "c1"), guide="none") +
coord_equal() +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 100)")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], color = 1:500) %>%
ggplot(aes(x = x, y = y, col = color)) +
geom_point() +
scale_color_gradientn(colours = cet_pal(10, name = "c1"), guide="none") +
coord_equal() +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 35)")
grid.arrange(q2, q1, nrow = 1)
dfs = list(df_sd1, df_sd2, df_sd3, df_sd4, df_sd5, df_sd6)
dfs_noise = list(df_sd1_noise, df_sd2_noise, df_sd3_noise, df_sd4_noise, df_sd5_noise, df_sd6_noise)
best_perp = sapply(dfs, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
best_perp_noise = sapply(dfs_noise, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
data.frame(sd = rep(c(seq(from=0.5, to=3, by=0.5)), 2),
perp = c(best_perp, best_perp_noise),
type = rep(c("signal", "noise"), each=6)) %>%
ggplot(aes(x=sd, y=perp, group=type, color=type)) +
geom_point() +
geom_line() +
scale_color_brewer(limits=c("signal", "noise"), labels=c("Signal", "Signal + Noise"), name="Comparison Data", palette="Dark2") +
labs(x="Standard Deviation of Noise",
y="Optimal Perplexity")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(viridis)
load("High dim vary sd.Rda")
q1 = data.frame(x = best_X[,1], y = best_X[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point()
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point()
grid.arrange(q2, q1, nrow = 1)
dfs = list(df_sd1, df_sd2, df_sd3, df_sd4, df_sd5, df_sd6)
dfs_noise = list(df_sd1_noise, df_sd2_noise, df_sd3_noise, df_sd4_noise, df_sd5_noise, df_sd6_noise)
best_perp = sapply(dfs, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
best_perp_noise = sapply(dfs_noise, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
data.frame(sd = rep(c(seq(from=0.5, to=3, by=0.5)), 2),
perp = c(best_perp, best_perp_noise),
type = rep(c("signal", "noise"), each=6)) %>%
ggplot(aes(x=sd, y=perp, group=type, color=type)) +
geom_point() +
geom_line() +
scale_color_discrete(limits=c("signal", "noise"), labels=c("Signal", "Signal + Noise"), name="Comparison Data") +
labs(x="Standard Deviation of Noise",
y="Optimal Perplexity")
for (i in 1:6) {
p1 = ggplot(dfs[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
p2 = ggplot(dfs_noise[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
grid.arrange(p2, p1, nrow = 1)
}
library(Rtsne)
?Rtsne
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(viridis)
library(RColorBrewer)
load("High dim vary sd.Rda")
q1 = data.frame(x = best_X[,1], y = best_X[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal (Perplexity = 80)")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 75)")
grid.arrange(q2, q1, nrow = 1)
library(cluster)
?silhouette
silhouette(x=rep(1:7, each=50), dist=dist(best_X))
mean(silhouette(x=rep(1:7, each=50), dist=dist(best_X))$sil_width)
plot(silhouette(x=rep(1:7, each=50), dist=dist(best_X)))
plot(silhouette(x=rep(1:7, each=50), dist=dist(best_X_noise)))
?silhouette
plot(silhouette(x=rep(1:7, each=50), dist=dist(best_X_noise), full=TRUe))
plot(silhouette(x=rep(1:7, each=50), dist=dist(best_X_noise), full=TRUE))
?silhouette
sil = silhouette(x=rep(1:7, each=50), dist=dist(best_X), full=TRUE)
sil_noise = silhouette(x=rep(1:7, each=50), dist=dist(best_X_noise), full=TRUE)
attributes(sil)
mean(sil$sil_width)
sil$sil_width
sil
sil[,3]
mean(sil[,3])
mean(sil_noise[,3])
?si.summary
sil.summary
summary(sil)
summary(sil)$avg.width
sortSilhouette(sil)
?plot
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(viridis)
library(RColorBrewer)
load("High dim vary sd.Rda")
q1 = data.frame(x = best_X[,1], y = best_X[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal (Perplexity = 80)")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 75)")
grid.arrange(q2, q1, nrow = 1)
sil = silhouette(x=rep(1:7, each=50), dist=dist(best_X), full=TRUE)
library(stats)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(viridis)
library(RColorBrewer)
load("High dim vary sd.Rda")
q1 = data.frame(x = best_X[,1], y = best_X[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal (Perplexity = 80)")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 75)")
grid.arrange(q2, q1, nrow = 1)
sil = silhouette(x=rep(1:7, each=50), dist=dist(best_X), full=TRUE)
library(cluster)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(viridis)
library(RColorBrewer)
load("High dim vary sd.Rda")
q1 = data.frame(x = best_X[,1], y = best_X[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal (Perplexity = 80)")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 75)")
grid.arrange(q2, q1, nrow = 1)
sil = silhouette(x=rep(1:7, each=50), dist=dist(best_X), full=TRUE)
sil_noise = silhouette(x=rep(1:7, each=50), dist=dist(best_X_noise), full=TRUE)
dfs = list(df_sd1, df_sd2, df_sd3, df_sd4, df_sd5, df_sd6)
dfs_noise = list(df_sd1_noise, df_sd2_noise, df_sd3_noise, df_sd4_noise, df_sd5_noise, df_sd6_noise)
best_perp = sapply(dfs, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
best_perp_noise = sapply(dfs_noise, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
data.frame(sd = rep(c(seq(from=1, to=3.5, by=0.5)), 2),
perp = c(best_perp, best_perp_noise),
type = rep(c("signal", "noise"), each=6)) %>%
ggplot(aes(x=sd, y=perp, group=type, color=type)) +
geom_point() +
geom_line() +
scale_color_brewer(limits=c("signal", "noise"),
labels=c("Signal", "Signal + Noise"),
name="Comparison Data",
palette="Dark2") +
labs(x="Standard Deviation of Noise",
y="Optimal Perplexity")
for (i in 1:6) {
p1 = ggplot(dfs[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
p2 = ggplot(dfs_noise[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
grid.arrange(p2, p1, nrow = 1)
}
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(viridis)
library(RColorBrewer)
library(cluster)
load("High dim vary sd.Rda")
q1 = data.frame(x = best_X[,1], y = best_X[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal (Perplexity = 80)")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 75)")
grid.arrange(q2, q1, nrow = 1)
sil = silhouette(x=rep(1:7, each=50), dist=dist(best_X), full=TRUE)
sil_noise = silhouette(x=rep(1:7, each=50), dist=dist(best_X_noise), full=TRUE)
dfs = list(df_sd1, df_sd2, df_sd3, df_sd4, df_sd5, df_sd6)
dfs_noise = list(df_sd1_noise, df_sd2_noise, df_sd3_noise, df_sd4_noise, df_sd5_noise, df_sd6_noise)
best_perp = sapply(dfs, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
best_perp_noise = sapply(dfs_noise, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
data.frame(sd = rep(c(seq(from=1, to=3.5, by=0.5)), 2),
perp = c(best_perp, best_perp_noise),
type = rep(c("signal", "noise"), each=6)) %>%
ggplot(aes(x=sd, y=perp, group=type, color=type)) +
geom_point() +
geom_line() +
scale_color_brewer(limits=c("signal", "noise"),
labels=c("Signal", "Signal + Noise"),
name="Comparison Data",
palette="Dark2") +
labs(x="Standard Deviation of Noise",
y="Optimal Perplexity")
for (i in 1:6) {
p1 = ggplot(dfs[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
p2 = ggplot(dfs_noise[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
grid.arrange(p2, p1, nrow = 1)
}
sil = silhouette(x=rep(1:7, each=50), dist=dist(best_X), full=TRUE)
sil_noise = silhouette(x=rep(1:7, each=50), dist=dist(best_X_noise), full=TRUE)
sil
mean(sil[,3])
mean(sil_noise[,3])
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(viridis)
library(RColorBrewer)
library(cluster)
load("High dim vary sd.Rda")
q1 = data.frame(x = best_X[,1], y = best_X[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal (Perplexity = 80)")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 75)")
grid.arrange(q2, q1, nrow = 1)
sil = silhouette(x=rep(1:7, each=50), dist=dist(best_X), full=TRUE)
sil_noise = silhouette(x=rep(1:7, each=50), dist=dist(best_X_noise), full=TRUE)
dfs = list(df_sd1, df_sd2, df_sd3, df_sd4, df_sd5, df_sd6)
dfs_noise = list(df_sd1_noise, df_sd2_noise, df_sd3_noise, df_sd4_noise, df_sd5_noise, df_sd6_noise)
best_perp = sapply(dfs, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
best_perp_noise = sapply(dfs_noise, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
data.frame(sd = rep(c(seq(from=1, to=3.5, by=0.5)), 2),
perp = c(best_perp, best_perp_noise),
type = rep(c("signal", "noise"), each=6)) %>%
ggplot(aes(x=sd, y=perp, group=type, color=type)) +
geom_point() +
geom_line() +
scale_color_brewer(limits=c("signal", "noise"),
labels=c("Signal", "Signal + Noise"),
name="Comparison Data",
palette="Dark2") +
labs(x="Standard Deviation of Noise",
y="Optimal Perplexity")
for (i in 1:6) {
p1 = ggplot(dfs[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
p2 = ggplot(dfs_noise[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
grid.arrange(p2, p1, nrow = 1)
}
sil = silhouette(x=rep(1:7, each=50), dist=dist(best_X), full=TRUE)
mean(sil[,3])
sil_noise = silhouette(x=rep(1:7, each=50), dist=dist(best_X_noise), full=TRUE)
mean(sil_noise[,3])
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(viridis)
library(RColorBrewer)
library(cluster)
load("High dim vary sd.Rda")
q1 = data.frame(x = best_X[,1], y = best_X[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal (Perplexity = 60)")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 55)")
grid.arrange(q2, q1, nrow = 1)
sil = silhouette(x=rep(1:7, each=50), dist=dist(best_X), full=TRUE)
mean(sil[,3])
sil_noise = silhouette(x=rep(1:7, each=50), dist=dist(best_X_noise), full=TRUE)
mean(sil_noise[,3])
dfs = list(df_sd1, df_sd2, df_sd3, df_sd4, df_sd5, df_sd6)
dfs_noise = list(df_sd1_noise, df_sd2_noise, df_sd3_noise, df_sd4_noise, df_sd5_noise, df_sd6_noise)
best_perp = sapply(dfs, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
best_perp_noise = sapply(dfs_noise, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
data.frame(sd = rep(c(seq(from=1, to=3.5, by=0.5)), 2),
perp = c(best_perp, best_perp_noise),
type = rep(c("signal", "noise"), each=6)) %>%
ggplot(aes(x=sd, y=perp, group=type, color=type)) +
geom_point() +
geom_line() +
scale_color_brewer(limits=c("signal", "noise"),
labels=c("Signal", "Signal + Noise"),
name="Comparison Data",
palette="Dark2") +
labs(x="Standard Deviation of Noise",
y="Optimal Perplexity")
for (i in 1:6) {
p1 = ggplot(dfs[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
p2 = ggplot(dfs_noise[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
grid.arrange(p2, p1, nrow = 1)
}
knitr::opts_chunk$set(echo = TRUE)
load("10x example small.Rda")
View(df)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr2)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
load("10x example small.Rda")
p1 = ggplot(df, aes(x=n_neigbors, y=trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "n_neighbors", y = "Trustworthiness")
ggplot(df, aes(x=n_neigbors, y=trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "n_neighbors", y = "Trustworthiness")
ggplot(df, aes(x=n_neigbors, y=trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "n_neighbors", y = "Trustworthiness")
ggplot(df, aes(x=n_neighbors, y=trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "n_neighbors", y = "Trustworthiness")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(gridExtra)
load("10x example small.Rda")
p1 = ggplot(df, aes(x=n_neighbors, y=trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "n_neighbors", y = "Trustworthiness")
p2 = ggplot(df, aes(x=n_neighbors, y=shep)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "n_neighbors", y = "Shepard Goodness")
grid.arrange(p1, p2, nrow = 1)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(viridis)
library(RColorBrewer)
library(cluster)
load("High dim vary sd.Rda")
q1 = data.frame(x = best_X[,1], y = best_X[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal (Perplexity = 60)")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 55)")
grid.arrange(q2, q1, nrow = 1)
sil = silhouette(x=rep(1:7, each=50), dist=dist(best_X), full=TRUE)
mean(sil[,3])
sil_noise = silhouette(x=rep(1:7, each=50), dist=dist(best_X_noise), full=TRUE)
mean(sil_noise[,3])
dfs = list(df_sd1, df_sd2, df_sd3, df_sd4, df_sd5, df_sd6)
dfs_noise = list(df_sd1_noise, df_sd2_noise, df_sd3_noise, df_sd4_noise, df_sd5_noise, df_sd6_noise)
best_perp = sapply(dfs, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
best_perp_noise = sapply(dfs_noise, function(df) {
df$perplexity[which(df$trust == max(df$trust))]
})
data.frame(sd = rep(c(seq(from=1, to=3.5, by=0.5)), 2),
perp = c(best_perp, best_perp_noise),
type = rep(c("signal", "noise"), each=6)) %>%
ggplot(aes(x=sd, y=perp, group=type, color=type)) +
geom_point() +
geom_line() +
scale_color_brewer(limits=c("signal", "noise"),
labels=c("Signal", "Signal + Noise"),
name="Comparison Data",
palette="Dark2") +
labs(x="Standard Deviation of Noise",
y="Optimal Perplexity")
for (i in 1:6) {
p1 = ggplot(dfs[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal")
p2 = ggplot(dfs_noise[[i]], aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "Trustworthiness", title = "Replicating Signal + Noise")
grid.arrange(p2, p1, nrow = 1)
}
q1 = data.frame(x = best_X[,1], y = best_X[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal (Perplexity = 60); Average Silhouette Width = 0.177")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 55)")
grid.arrange(q2, q1, nrow = 1)
q1 = data.frame(x = best_X[,1], y = best_X[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal (Perplexity = 60); Average Silhouette Width = 0.177")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 55); Average Silhouette Width = 0.121")
grid.arrange(q2, q1, nrow = 1)
q1 = data.frame(x = best_X[,1], y = best_X[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal (Perplexity = 60); Avg Silhouette Width = 0.177")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 55); Avg Silhouette Width = 0.121")
grid.arrange(q2, q1, nrow = 1)
q1 = data.frame(x = best_X[,1], y = best_X[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal (Perplexity = 60); Avg Silhouette Width = 0.178")
q2 = data.frame(x = best_X_noise[,1], y = best_X_noise[,2], type = rep(1:7, each=50)) %>%
ggplot(aes(x = x, y = y, col = factor(type))) +
geom_point() +
scale_color_discrete(guide="none") +
labs(x="", y="", title="Replicating Signal + Noise (Perplexity = 55); Avg Silhouette Width = 0.121")
grid.arrange(q2, q1, nrow = 1)
citation('Rtsne')
print('Rtsne', bibtex=TRUE)
citation('umap')

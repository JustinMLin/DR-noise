library(gridExtra)
library(dplyr)
load("best rep (5 dim CyTOF).Rda")
data = read.delim("../../../../../CyTOF data/Exp1_NK_uns_CD4_inf.txt")
data = data %>%
select(-c(1,2)) %>%
sample_n(5000) %>%
mutate_all(function(x) log(1+x))
pca = prcomp(data, center = TRUE, scale. = TRUE, rank. = 30)
Z = pca$x
library(cluster)
library(factoextra)
fviz_nbclust(Z, kmeans, method = "wss")
fviz_nbclust(Z, kmeans, method = "silhouette")
clusOut = clusGap(x = Z, FUNcluster = kmeans, K.max = 10, iter.max = 50, nstart = 30)
plot(clusOut, main="Gap Statistic")
test = kmeans(Z, centers=3, iter.max=50, nstart=20)$cluster
cluster = cutree(hclust(dist(best_X), method="ward.D2"), k=15)
new_cluster = sapply(cluster, function(x) {
if (x == 15) {
1
}
else if (x %in% c(5,7)) {
2
}
else {
3
}
})
p1 = data.frame(x=best_X[,1], y=best_X[,2], col=factor(new_cluster)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 110)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], col=factor(new_cluster)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
p1 = data.frame(x=best_X[,1], y=best_X[,2], col=factor(test)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 110)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], col=factor(test)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
p1 = data.frame(x=best_X[,1], y=best_X[,2], col=factor(new_cluster)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 110)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], col=factor(new_cluster)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
p1 = data.frame(x=best_X[,1], y=best_X[,2], col=factor(test)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 110)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], col=factor(test)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
p1 = data.frame(x=best_X[,1], y=best_X[,2], col=factor(new_cluster)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 110)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], col=factor(new_cluster)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
View(best_trust)
View(best_X)
knitr::opts_chunk$set(echo = TRUE)
options(encoding = "utf-8")
library(ggplot2)
library(gridExtra)
library(dplyr)
load("best rep (5 dim scRNA-seq).Rda")
data = read.delim("../../../../../scRNA-seq data/molecules.txt")
data = as.data.frame(t(data))
data = data %>%
dplyr::select(where(function(x) mean(x == 0) < 0.2)) %>%
mutate_all(function(x) log(1+x))
pca = prcomp(data, center = TRUE, scale. = TRUE, rank. = 30)
Z = pca$x
library(cluster)
library(factoextra)
fviz_nbclust(Z, kmeans, method = "wss")
fviz_nbclust(Z, kmeans, method = "silhouette")
clusOut = clusGap(x = Z, FUNcluster = kmeans, K.max = 15, iter.max = 50, nstart = 30)
cluster = kmeans(Z, centers=11, nstart=30)$cluster
cluster_hier = hclust(dist(Z, method="manhattan"), method="ward.D")
cluster1 = cutree(cluster_hier, k=10)
plot(cluster_hier, labels=FALSE)
p1 = data.frame(x=best_X[,1], y=best_X[,2], color=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1, show.legend=FALSE) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 120)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], color=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 40)")
grid.arrange(p2, p1, nrow=1)
p1 = data.frame(x=best_X[,1], y=best_X[,2], color=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1, show.legend=FALSE) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 120)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], color=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1, show.legend=FALSE) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 40)")
grid.arrange(p2, p1, nrow=1)
p1 = data.frame(x=best_X[,1], y=-best_X[,2], color=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1, show.legend=FALSE) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 120)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], color=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1, show.legend=FALSE) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 40)")
grid.arrange(p2, p1, nrow=1)
knitr::opts_chunk$set(echo = TRUE)
options(encoding = "utf-8")
library(ggplot2)
library(gridExtra)
library(dplyr)
load("best rep (10 dim scRNA-seq).Rda")
data = read.delim("../../../../../scRNA-seq data/molecules.txt")
data = as.data.frame(t(data))
data = data %>%
dplyr::select(where(function(x) mean(x == 0) < 0.2)) %>%
mutate_all(function(x) log(1+x))
pca = prcomp(data, center = TRUE, scale. = TRUE, rank. = 30)
Z = pca$x
cluster = kmeans(Z, centers=11, nstart=30)$cluster
cluster_hier = hclust(dist(Z, method="manhattan"), method="ward.D")
cluster1 = cutree(cluster_hier, k=10)
plot(cluster_hier, labels=FALSE)
p1 = data.frame(x=best_X[,1], y=best_X[,2], color=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 60)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], color=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
p1 = data.frame(x=best_X[,1], y=-best_X[,2], color=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 60)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], color=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
p1 = data.frame(x=-best_X[,1], y=-best_X[,2], color=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 60)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], color=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
p1 = data.frame(x=-best_X[,1], y=-best_X[,2], color=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1, show.legend=FALSE) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 60)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], color=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1, show.legend=FALSE) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
knitr::opts_chunk$set(echo = TRUE)
options(encoding = "utf-8")
library(ggplot2)
library(gridExtra)
library(dplyr)
library(phyloseq)
load("best rep (5 dim enterotype).Rda")
data(enterotype)
data = as.data.frame(t(enterotype@otu_table))
data = data %>%
select(where(function(x) mean(x < 0.1e-05) < 0.6)) %>%
mutate_all(function(x) log(1+x))
pca = prcomp(data, center = TRUE, scale. = TRUE, rank. = 30)
Z = pca$x
cluster = kmeans(Z, centers=2, nstart=30)$cluster
p1 = data.frame(x=best_X[,1], y=best_X[,2], color=factor(cluster)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 90)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], color=factor(cluster)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
p1 = data.frame(x=best_X[,1], y=best_X[,2], color=factor(cluster)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1, show.legend=FALSE) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 90)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], color=factor(cluster)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1, show.legend=FALSE) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
knitr::opts_chunk$set(echo = TRUE)
options(encoding = "utf-8")
library(ggplot2)
library(gridExtra)
library(dplyr)
library(phyloseq)
load("best rep (8 dim enterotype).Rda")
data(enterotype)
data = as.data.frame(t(enterotype@otu_table))
data = data %>%
select(where(function(x) mean(x < 0.1e-05) < 0.6)) %>%
mutate_all(function(x) log(1+x))
pca = prcomp(data, center = TRUE, scale. = TRUE, rank. = 30)
Z = pca$x
cluster = kmeans(Z, centers=2, nstart=30)$cluster
p1 = data.frame(x=best_X[,1], y=best_X[,2], color=factor(cluster)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1, show.legend=FALSE) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 85)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], color=factor(cluster)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1, show.legend=FALSE) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 60)")
grid.arrange(p2, p1, nrow=1)
p1 = data.frame(x=-best_X[,1], y=-best_X[,2], color=factor(cluster)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1, show.legend=FALSE) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 85)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], color=factor(cluster)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1, show.legend=FALSE) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 60)")
grid.arrange(p2, p1, nrow=1)
p1 = data.frame(x=best_X[,1], y=best_X[,2], color=factor(cluster)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1, show.legend=FALSE) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 90)")
knitr::opts_chunk$set(echo = TRUE)
options(encoding = "utf-8")
library(ggplot2)
library(gridExtra)
library(dplyr)
library(phyloseq)
load("best rep (5 dim enterotype).Rda")
data(enterotype)
data = as.data.frame(t(enterotype@otu_table))
data = data %>%
select(where(function(x) mean(x < 0.1e-05) < 0.6)) %>%
mutate_all(function(x) log(1+x))
pca = prcomp(data, center = TRUE, scale. = TRUE, rank. = 30)
Z = pca$x
cluster = kmeans(Z, centers=2, nstart=30)$cluster
p1 = data.frame(x=best_X[,1], y=best_X[,2], color=factor(cluster)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1, show.legend=FALSE) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 90)")
p2 = data.frame(x=-best_X_noise[,1], y=-best_X_noise[,2], color=factor(cluster)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1, show.legend=FALSE) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
knitr::opts_chunk$set(echo = TRUE)
options(encoding = "utf-8")
library(ggplot2)
library(gridExtra)
library(dplyr)
load("best rep (5 dim CyTOF).Rda")
library(cluster)
library(factoextra)
fviz_nbclust(Z, kmeans, method = "wss")
fviz_nbclust(Z, kmeans, method = "silhouette")
clusOut = clusGap(x = Z, FUNcluster = kmeans, K.max = 10, iter.max = 50, nstart = 30)
library(cluster)
library(factoextra)
fviz_nbclust(Z, kmeans, method = "wss")
fviz_nbclust(Z, kmeans, method = "silhouette")
#clusOut = clusGap(x = Z, FUNcluster = kmeans, K.max = 10, iter.max = 50, nstart = 30)
#plot(clusOut, main="Gap Statistic")
cluster = kmeans(Z, centers=3, iter.max=50, nstart=20)$cluster
p1 = data.frame(x=best_X[,1], y=best_X[,2], col=factor(cluster)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 110)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], col=factor(cluster)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
?hclust
cluster = kmeans(Z, centers=3, iter.max=50, nstart=20)$cluster
hier = hclust(dist(Z, method="manhattan"), method="ward.D")
cluster1 = cutree(hier, k=3)
p1 = data.frame(x=best_X[,1], y=best_X[,2], col=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 110)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], col=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
cluster = kmeans(Z, centers=3, iter.max=50, nstart=20)$cluster
hier = hclust(dist(Z, method="euclidean"), method="ward.D")
cluster1 = cutree(hier, k=3)
p1 = data.frame(x=best_X[,1], y=best_X[,2], col=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 110)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], col=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
cluster = kmeans(Z, centers=3, iter.max=50, nstart=20)$cluster
hier = hclust(dist(Z, method="euclidean"), method="complete")
cluster1 = cutree(hier, k=3)
p1 = data.frame(x=best_X[,1], y=best_X[,2], col=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 110)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], col=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
cluster = kmeans(Z, centers=3, iter.max=50, nstart=20)$cluster
hier = hclust(dist(Z, method="manhattan"), method="complete")
cluster1 = cutree(hier, k=3)
p1 = data.frame(x=best_X[,1], y=best_X[,2], col=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 110)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], col=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
cluster = kmeans(Z, centers=3, iter.max=50, nstart=20)$cluster
hier = hclust(dist(Z, method="manhattan"), method="ward.D2")
cluster1 = cutree(hier, k=3)
p1 = data.frame(x=best_X[,1], y=best_X[,2], col=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 110)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], col=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
cluster = kmeans(Z, centers=3, iter.max=50, nstart=20)$cluster
hier = hclust(dist(Z, method="manhattan"), method="ward.D2")
cluster1 = cutree(hier, k=2)
p1 = data.frame(x=best_X[,1], y=best_X[,2], col=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 110)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], col=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
p1 = data.frame(x=best_X[,1], y=-best_X[,2], col=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 110)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], col=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
cluster = kmeans(Z, centers=3, iter.max=50, nstart=20)$cluster
hier = hclust(dist(Z, method="manhattan"), method="ward.D2")
cluster1 = cutree(hier, k=6)
p1 = data.frame(x=best_X[,1], y=-best_X[,2], col=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 110)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], col=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
cluster = kmeans(Z, centers=3, iter.max=50, nstart=20)$cluster
hier = hclust(dist(Z, method="manhattan"), method="ward.D2")
cluster1 = cutree(hier, k=2)
p1 = data.frame(x=best_X[,1], y=-best_X[,2], col=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 110)")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], col=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=col)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 50)")
grid.arrange(p2, p1, nrow=1)
setwd("~/Desktop/Research/out-of-sample-compare/Out of Sample/DR Noise/Calibrating perplexity/scRNA-seq Example")
source("../../../Algorithms/DR metrics.R")
data = read.delim("../../../../../scRNA-seq data/molecules.txt")
data = as.data.frame(t(data))
data = data %>%
dplyr::select(where(function(x) mean(x == 0) < 0.2)) %>%
mutate_all(function(x) log(1+x))
pca = prcomp(data, center = TRUE, scale. = TRUE, rank. = 30)
Z = pca$x
barplot(pca$sdev^2)
?barplot
barplot(pca$sdev^2, xlim=c(0,100))
barplot(pca$sdev^2, ylim=c(0,100))
barplot(pca$sdev^2, xlim=c(0,30), ylim=c(0,100))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(gridExtra)
library(viridis)
load("trust vs shep (umap scRNA-seq).Rda")
grid.arrange(p2, p1, nrow = 1)
q1 = ggplot(df, aes(x = perplexity, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "n_neighbors", title = "Replicating Signal")
q2 = ggplot(df, aes(x = perplexity, y = trust_noise)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "Perplexity", y = "n_neighbors", title = "Replicating Signal + Noise")
q3 = ggplot(df, aes(x = perplexity, y = shep, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Shepard Goodness", title = "Replicating Signal")
q4 = ggplot(df, aes(x = perplexity, y = shep_noise, col = perplexity)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "Perplexity", y = "Shepard Goodness", title = "Replicating Signal + Noise")
grid.arrange(q2, q1, nrow = 1)
q1 = ggplot(df, aes(x = neighbors, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "n_neighbors", y = "Trustworthiness", title = "Replicating Signal")
q2 = ggplot(df, aes(x = neighbors, y = trust_noise)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "n_neighbors", y = "Trustworthiness", title = "Replicating Signal + Noise")
q3 = ggplot(df, aes(x = neighbors, y = shep, col = neighbors)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "n_neighbors", y = "Shepard Goodness", title = "Replicating Signal")
q4 = ggplot(df, aes(x = neighbors, y = shep_noise, col = neighbors)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "n_neighbors", y = "Shepard Goodness", title = "Replicating Signal + Noise")
grid.arrange(q2, q1, nrow = 1)
grid.arrange(q4, q3, nrow = 1)
q1 = ggplot(df, aes(x = neighbors, y = trust)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "n_neighbors", y = "Trustworthiness", title = "Replicating Signal")
q2 = ggplot(df, aes(x = neighbors, y = trust_noise)) +
geom_point(size = 2) +
geom_smooth(method="loess", se=FALSE, color="red") +
labs(x = "n_neighbors", y = "Trustworthiness", title = "Replicating Signal + Noise")
q3 = ggplot(df, aes(x = neighbors, y = shep, col = neighbors)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "n_neighbors", y = "Shepard Goodness", title = "Replicating Signal")
q4 = ggplot(df, aes(x = neighbors, y = shep_noise, col = neighbors)) +
geom_point(size = 2) +
scale_color_viridis() +
labs(x = "n_neighbors", y = "Shepard Goodness", title = "Replicating Signal + Noise")
grid.arrange(q2, q1, nrow = 1)
grid.arrange(q4, q3, nrow = 1)
knitr::opts_chunk$set(echo = TRUE)
options(encoding = "utf-8")
library(ggplot2)
library(gridExtra)
library(dplyr)
load("best rep (5 dim scRNA-seq).Rda")
data = read.delim("../../../../../scRNA-seq data/molecules.txt")
data = as.data.frame(t(data))
data = data %>%
dplyr::select(where(function(x) mean(x == 0) < 0.2)) %>%
mutate_all(function(x) log(1+x))
pca = prcomp(data, center = TRUE, scale. = TRUE, rank. = 30)
Z = pca$x
cluster = kmeans(Z, centers=11, nstart=30)$cluster
cluster_hier = hclust(dist(Z, method="manhattan"), method="ward.D")
cluster1 = cutree(cluster_hier, k=13)
plot(cluster_hier, labels=FALSE)
p1 = data.frame(x=best_X[,1], y=-best_X[,2], color=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1) +
labs(x="", y="", title="Replicating Signal \n(perplexity = 120)", color="Class")
p2 = data.frame(x=best_X_noise[,1], y=best_X_noise[,2], color=factor(cluster1)) %>%
ggplot(aes(x=x, y=y, color=color)) +
geom_point(size=1, show.legend=FALSE) +
labs(x="", y="", title="Replicating Signal + Noise \n(perplexity = 40)")
grid.arrange(p2, p1, nrow=1)
source("../../Algorithms/DR metrics.R")
setwd("~/Desktop/Research/out-of-sample-compare/Out of Sample/DR Noise/Calibrating perplexity/scRNA-seq Example")
source("../../Algorithms/DR metrics.R")
source("../../../Algorithms/DR metrics.R")
dist_cor_full(Z, best_X)
dist_cor_full(Z, best_X_noise)
dist_cor_full(Z, best_X)
dist_cor_full(Z, best_X_noise)
